<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="MovingPoint.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxMAAAsTAQCanBgAAASVSURBVGhD7VrJbtRAEE1IxM4sSWbahsl0Dxlx4AdAcIkQ
        IPgB9jsS24FdLBInEIEzQogbixSB+AZI2PcLCuIvEASElACv7CrbMxN7PDN2QlCeVIrzqrqqq13d7u6k
        awEhyCo9DLnEMsz0/AF1PGeZPyT0zPT8wUICc415l0CmMFTNqfLhrGXu55R5n1Xmh58AnokjnaUPZQqD
        Q9xsztGbs8v70bHn0tm4gjbP8kW9Dz56XFezjLyld2A0v8zUuZZE6c8Z22xnt+nDtu3lCHy7oSOWmUKt
        P8la+nhfUW/MKH1NdPRMHHQnYDNGtqLzROlbpVJpGYdJByvU2iJq+V0wMNU3yuHKSqtaYDMHUZPY8WPp
        q8F54ojSb+r9JAa38/pzTUBLj/aVSmvYpAZRCQjyq4cG4fNBjU/ESDwJp2xqR346r/RZVneK7lxRnyOf
        nn+8iS6tl7K+c8BpsOanM8rsYlVigM/d5NuLo/RNVnUGWiE8p5AER74BKMnzNbEsvZNVbaO3dqnUo8yn
        hW6U6kOJh0k+Aa7970TOqhwIOPtBk45VqYEWBcSalLh443tY1TqwPL7wErDMZaZTBy2xXlxlnjLdGpy9
        DTuBTMVe2qrVJSiDY+jESyT9nYSewR0lHVtFYkWxoigmx/6dVeUKq+KDNmbsgNbxx0xHwnn9lv4o7RpE
        mQ9h3416IOa4tMtY5iDT8YGRw87RdUDbA6bDgdGN7LwIkojzJhD/pLRBGd1lOj4okDhYpcwGpkPhlo10
        Uv9C0NP9/YOrSfB8hjhfXznCzUKRL5Q3+fbmLdMzA68reABn8fcpGUuPCM9NGoA6fyX21GGmPThJiB6L
        A9MNkDjBzSB+nxQ+IP5FARFi3Ey4SQNQPt/EZmCgbDPtoVDQlujJlukGiE0zoT5zk+QToLJh2gNNXtHD
        9ivTDRCbZlKfQOolRFsQT590Cc2E4CSmwwjToYD9UbHnSXymo0lslzf79k0m8UzAKN0TB3jlJ5gOh/sB
        85IOFVpG169fzK1CgaRPSRuM9h2m4wMlcSjgYIzpSDh1HpUEdLE/ZDj0S7u2PmR09YHGv9nJFJ3IWBUN
        jC6VCNU5TWxXzHOnbGKMPIG3EnI2wFZCG1a1BicwjwLeyFWmUwfe1HWJi86PM9066N7Gd2R+5u21ZVal
        hr411RJi+Stgh6e/Hqwe/kEeB3Bw3a4qFdCB5pHEQyKfwHV28ZUpVrZ5CZDgAM6qxAH/F4OxsI3ewqrO
        gJG/FXBMh/rdrEoMdPIi3xIHo3+DVZ2DbsyQxBtx7gRy30QS5dQNfxccn55//TLRaxUCnchq5gMJDuBh
        52SsHs0vtrAoBGvetTUTK+11A2ySLDiJ13UBf2LERmjtZjMHUQk46zz2Om5b3xeNfGpXiwIup5u1gR2Z
        pjUb346TdBipv9wlDh0+BXlKtqITAX8j8bKJQrZY2YqgE/UdaVXg41Niq00b6MHHbi+Pqmw74ghtD8Z5
        NVvkuppj0NUHbbqQzF1MzHf4GfgTk54E95Z0rk2be5vZBE3cQAKhB6F/FgsJzDX+hwTm9z97zA66uv4C
        cEqacy167noAAAAASUVORK5CYII=
</value>
  </data>
</root>